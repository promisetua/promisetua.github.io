<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JAVA学习笔记</title>
      <link href="/2024/05/23/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/05/23/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="⚡File文件类">⚡File文件类</h2><p><strong>File构造方法</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">File</span> <span class="variable">f1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;D:\\aaa&quot;</span>);</span><br><span class="line"><span class="type">File</span> <span class="variable">f2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;D:\\1aaa&quot;</span>,<span class="string">&quot;\\bbb&quot;</span>);</span><br><span class="line"><span class="type">File</span> <span class="variable">f3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(f1,<span class="string">&quot;\\bbb&quot;</span>);</span><br></pre></td></tr></table></figure><p>File的一些<strong>成员方法</strong>用来判断存在和返回一些文件信息</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">file.isFile()</span><br><span class="line">file.isDirectory()</span><br><span class="line">file.exists()</span><br><span class="line">f1.getPath()</span><br><span class="line">file.getAbsoluteFile()</span><br><span class="line">ile.lastModified()</span><br><span class="line">f1.length()</span><br></pre></td></tr></table></figure><p>createNewFile()方法只会创建文件,如果文件夹<strong>不为空</strong>则删除不成功</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">f.createNewFile()j</span><br></pre></td></tr></table></figure><p>file.listFiles()返回当前文件夹的所有东西，获取并遍历文件,返回当前目录的所有文件和目录，隐藏文件也可以，如果没有权限，或者路径不存在，以及路径是一个文件返回null,空文件夹的话返回0。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(parent,child);</span><br><span class="line">File[] files = file.listFiles();</span><br><span class="line"><span class="keyword">for</span> (File file1 : files) &#123;</span><br><span class="line">    System.out.println(file1.getPath());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>delete()方法删除文件和空文件夹是直接删除<strong>不会走回收站</strong>，如果文件夹不为空则删除不了，mkdirs()方法可以创建<strong>多级目录</strong>。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">f.delete()</span><br><span class="line">mkdirs()</span><br></pre></td></tr></table></figure><p>写一个寻找电脑所有指定格式后缀文件的代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FileDemo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 寻找电脑上所有avi格式的文件</span></span><br><span class="line"><span class="comment">         * */</span></span><br><span class="line">        findPan();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//写一个方法来遍历盘符分别调用findFind方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">findPan</span><span class="params">()</span>&#123;</span><br><span class="line">        File[] files = File.listRoots();</span><br><span class="line">        <span class="keyword">for</span> (File file : files) &#123;</span><br><span class="line">            findFile(file);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//写一个方法递归调用自己找文件</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">findFile</span><span class="params">(File file)</span> &#123;</span><br><span class="line">        File[] files = file.listFiles();</span><br><span class="line">        <span class="keyword">if</span> (files != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span> (File file1 : files) &#123;</span><br><span class="line">                <span class="comment">// 如果是文件，那就判断一下后缀，保留</span></span><br><span class="line">                <span class="keyword">if</span> (file1.isFile() &amp;&amp; file1.getName().endsWith(<span class="string">&quot;.yml&quot;</span>)) &#123;</span><br><span class="line">                    System.out.println(file1.getPath());</span><br><span class="line">                &#125; <span class="keyword">else</span></span><br><span class="line">                <span class="comment">// 如果不是文件那就递归调用这个方法，找下一级目录</span></span><br><span class="line">                &#123;</span><br><span class="line">                    findFile(file1);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="⚡IO流">⚡IO流</h2><h4 id="🌵-IO流的继承结构">🌵 IO流的继承结构</h4><img src="https://gitee.com/promisetua/typora-image/raw/master/image-20240525173243413.png" alt="image-20240525173243413" style="zoom: 42%;" /><h4 id="🌵-什么是IO流？">🌵 什么是IO流？</h4><p>存储、读取数据的解决方案</p><h4 id="🌵-IO流的分类">🌵 IO流的分类</h4><p>按方向分可以分为：输入流和输出流</p><p>按文件类型可以分为：字符流和字节流</p><p>字节输入流：InputStream字节输出流：OutputStream</p><p>字符输入流：Reader字符输出流：Writer</p><p>这四种都是<strong>抽象类</strong></p><h4 id="🌵-OutputStream">🌵 OutputStream</h4><p>1.创建对象</p><p>2.写入数据</p><p>3.释放流</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;D:\\aaa\\2b.txt&quot;</span>,<span class="literal">true</span>);</span><br><span class="line">fos.write(<span class="number">97</span>);</span><br><span class="line">fos.close();</span><br></pre></td></tr></table></figure><p>true打开就可以续写，换行的话需要写入换行符**“\r\n”**，write()方法可以传递三种参数：</p><img src="https://gitee.com/promisetua/typora-image/raw/master/image-20240523122821714.png" alt="image-20240523122821714" style="zoom:80%;" /><h4 id="🌵-InputStream">🌵 InputStream</h4><p>1.创建对象</p><p>2.写入数据</p><p>3.释放流</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;D:\\aaa\\2b.txt&quot;</span>);</span><br><span class="line">System.out.println(fis.read());</span><br><span class="line">fis.close();</span><br></pre></td></tr></table></figure><h6 id="FileInputStream书写细节：">FileInputStream书写细节：</h6><p>​<strong>1️⃣</strong> 创建字节输入流对象</p><p>​如果文件不存在，就直接报错</p><p>​<strong>2️⃣</strong> 读取数据</p><p>​1.一次读一个字节，读出来的数据是ASCII上对应的数字。</p><p>​2.读到文件的末尾，read方法返回-1。</p><p>​3️⃣ 释放资源​</p><p>​每次使用完流，都必须要释放资源</p><h6 id="循环读取文件">循环读取文件</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;D:\\aaa\\2b.txt&quot;</span>);</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    <span class="keyword">while</span> ((t = fis.read()) != -<span class="number">1</span>)&#123;</span><br><span class="line">        System.out.print((<span class="type">char</span>)t);</span><br><span class="line">    &#125;</span><br><span class="line">    fis.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里定义一个变量t的原因是：read方法表示读取数据，而且是读取一个数据就<strong>移动一次指针</strong>。</p><p>但是这种拷贝文件速度太慢了，一次拷贝一个字节，我们可以给write()方法传入一个字节数组</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//优化拷贝文件 write（）传入字节数组</span></span><br><span class="line"><span class="comment">//测试一下程序巡行时间</span></span><br><span class="line"><span class="type">long</span> <span class="variable">start</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line"><span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;C:\\Users\\nuoyan\\Videos\\Captures\\123456.mp4&quot;</span>);</span><br><span class="line"><span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;C:\\Users\\nuoyan\\Videos\\Captures\\copy.mp4&quot;</span>);</span><br><span class="line"><span class="type">byte</span>[] bytes = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span> * <span class="number">1024</span> *<span class="number">5</span>];</span><br><span class="line"><span class="type">int</span> len;</span><br><span class="line"><span class="keyword">while</span> ((len = fis.read(bytes)) != -<span class="number">1</span>)&#123;</span><br><span class="line">    fos.write(bytes,<span class="number">0</span>, len);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//释放资源先打开后关闭</span></span><br><span class="line">fos.close();</span><br><span class="line">fis.close();</span><br><span class="line"><span class="type">long</span> <span class="variable">end</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">System.out.println(end-start);</span><br></pre></td></tr></table></figure><h4 id="🌵-try…catch">🌵 try…catch</h4><p><strong><font color=red>finally里面的代码一定会执行，除非虚拟机停止</font></strong></p><img src="https://gitee.com/promisetua/typora-image/raw/master/image-20240525163045212.png" alt="image-20240525163045212" style="zoom: 63%;" /><h4 id="🌵-字符集">🌵 字符集</h4><p>在计算机中，任意的数据都是以<strong>二进制</strong>的形式来存储的</p><p><strong>字节</strong>是计算机中<strong>最小</strong>的存储单元，英文字母只需要一个字节（8个比特位），而汉字占<strong>两个</strong>字节</p><img src="https://gitee.com/promisetua/typora-image/raw/master/image-20240525164220507.png" alt="image-20240525164220507" style="zoom: 40%;" /><p>计算机的存储规则：汉字（<strong>GBK</strong>），两个字节存储</p><p>简体中文版本的Windows，默认使用GBK字符集（完全兼容ASCII字符集）</p><img src="https://gitee.com/promisetua/typora-image/raw/master/image-20240525164802782.png" alt="image-20240525164802782" style="zoom:40%;" /><p>核心：GBK中汉字的<strong>高位字节</strong>是以<strong>1</strong>开头的，英文是以<strong>0</strong>开头的</p><p><strong>UTF-8</strong>编码规则: 用1-4个字节保存（utf-8是Unicode字符集的一种编码方式）</p><p><strong>英文</strong>占一个字节，二进制第一位是<strong>0</strong>，转成十进制是<strong>正数</strong></p><p><strong>中文</strong>占三个字节（1110,10,10），剩余用实际数据补齐，二进制第一位是<strong>1</strong>，第一个字节转成十进制是<strong>负数</strong></p><h6 id="出现乱码的原因：">出现乱码的原因：</h6><p>1.读取数据时没有读完整个汉字</p><p>2.编码和解码打的方式不统一</p><img src="https://gitee.com/promisetua/typora-image/raw/master/image-20240525170407177.png" alt="image-20240525170407177" style="zoom: 40%;" /><h6 id="如何不产生乱码？">如何不产生乱码？</h6><p><strong>1️⃣</strong> .不要用字节流读取文本文件</p><p><strong>2️⃣</strong> .编码解码使用同一个码表，同一个编码方式</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1.编码</span></span><br><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;love一你&quot;</span>;</span><br><span class="line"><span class="type">byte</span>[] bytes1 = str.getBytes();<span class="comment">//默认编码</span></span><br><span class="line">System.out.println(Arrays.toString(bytes1));<span class="comment">//数组转换成String类型输出</span></span><br><span class="line"><span class="comment">//2.解码</span></span><br><span class="line"><span class="type">String</span> <span class="variable">str1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(bytes1);</span><br><span class="line">System.out.println(str1);</span><br><span class="line"><span class="comment">//3.如果编码解码使用的码表、编码方式不一样</span></span><br><span class="line"><span class="type">String</span> <span class="variable">str2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(bytes1,<span class="string">&quot;GBK&quot;</span>);</span><br><span class="line">System.out.println(str2);</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">[<span class="number">108</span>, <span class="number">111</span>, <span class="number">118</span>, <span class="number">101</span>, -<span class="number">28</span>, -<span class="number">72</span>, -<span class="number">128</span>, -<span class="number">28</span>, -<span class="number">67</span>, -<span class="number">96</span>]</span><br><span class="line">love一你</span><br><span class="line">love涓�浣�</span><br></pre></td></tr></table></figure><h4 id="🌵-字符流">🌵 字符流</h4><img src="https://gitee.com/promisetua/typora-image/raw/master/image-20240525172947491.png" alt="image-20240525172947491" style="zoom:44%;" /><p>字符流的继承结构：</p><img src="https://gitee.com/promisetua/typora-image/raw/master/image-20240525181429893.png" alt="image-20240525181429893" style="zoom:44%;" /><h6 id="🌵-FileReader">🌵  FileReader</h6><p><strong>int read( )函数</strong> ：该函数的返回值为int数值，表示读取的字符对应的<strong>ascii码</strong>,当返回为-1表示读取到文件末尾。</p><p><strong>1️⃣</strong> .字符流的底层也是字节流，默认是一个字节一个字节读取。</p><p><strong>2️⃣</strong> .如果遇到中文就会一次读取多个，GBK一次读取两个字节，UTF-8一次读取三个字节。</p><p><strong>3️⃣</strong> .read()读取后，方法的底层会进行解码并且转成十进制</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1.创建对象并且关联文件</span></span><br><span class="line"><span class="type">FileReader</span> <span class="variable">fr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileReader</span>(<span class="string">&quot;..\\new02\\text.txt&quot;</span>);</span><br><span class="line"><span class="comment">//2.读取数据read()</span></span><br><span class="line"><span class="type">int</span> ch;</span><br><span class="line"><span class="keyword">while</span> ((ch = fr.read()) != -<span class="number">1</span>)&#123;</span><br><span class="line">    System.out.print((<span class="type">char</span>)ch);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//3.释放资源</span></span><br><span class="line">fr.close();</span><br></pre></td></tr></table></figure><p><strong>read(chars)</strong> 带参数：读取数据，解码，强转合并，把强转之后的字符放到数组中</p><p>也就相当于：<strong>read(chars)  = read() + 强制类型转换</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1.创建对象并且关联文件</span></span><br><span class="line"><span class="type">FileReader</span> <span class="variable">fr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileReader</span>(<span class="string">&quot;..\\new02\\text.txt&quot;</span>);</span><br><span class="line"><span class="type">char</span>[] chars = <span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">2</span>];</span><br><span class="line"><span class="comment">//2.读取数据read()</span></span><br><span class="line"><span class="type">int</span> len;</span><br><span class="line"><span class="keyword">while</span> ((len = fr.read(chars)) != -<span class="number">1</span>)&#123; <span class="comment">//len接收返回的数组长度</span></span><br><span class="line">    System.out.print(<span class="keyword">new</span> <span class="title class_">String</span>(chars,<span class="number">0</span>,len));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//3.释放资源</span></span><br><span class="line">fr.close();</span><br></pre></td></tr></table></figure><h6 id="🌵-FileWriter">🌵  FileWriter</h6><img src="https://gitee.com/promisetua/typora-image/raw/master/image-20240525181726535.png" alt="image-20240525181726535" style="zoom:44%;" /><p>FileWriter的write方法可以传入字符、字符数组、字符串</p><p>FileWriter的构造方法的第二个参数可以设置为true开启续写</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1.创建对象并且关联文件</span></span><br><span class="line"><span class="type">FileWriter</span> <span class="variable">fw</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileWriter</span>(<span class="string">&quot;..\\new02\\text.txt&quot;</span>,<span class="literal">true</span>);</span><br><span class="line"><span class="comment">//2.write()</span></span><br><span class="line">fw.write(<span class="number">25105</span>);</span><br><span class="line"><span class="type">char</span>[] chars = &#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>&#125;;</span><br><span class="line">fw.write(chars);</span><br><span class="line">fw.write(<span class="string">&quot;你好呀，我写入一个字符串&quot;</span>);</span><br><span class="line"><span class="comment">//3.释放资源</span></span><br><span class="line">fw.close();</span><br></pre></td></tr></table></figure><h6 id="🌵-练习一：复制文件夹">🌵  练习一：复制文件夹</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">pratice01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">//复制一个文件夹 包括子目录</span></span><br><span class="line">        <span class="comment">//创建原文件夹和目标文件夹的文件对象</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">src</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;D:\\1aaa\\bbb\\2&quot;</span>);</span><br><span class="line">        <span class="type">File</span> <span class="variable">dest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;D:\\1aaa\\bbb\\1&quot;</span>);</span><br><span class="line">        <span class="comment">//调用方法复制文件夹</span></span><br><span class="line">        copyfile(src,dest);</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">copyfile</span><span class="params">(File src, File dest)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">//创建一个目的文件夹如果目的文件夹为空</span></span><br><span class="line">        dest.mkdirs();</span><br><span class="line">        <span class="comment">//进入src目录判断路径下的是文件还是文件夹</span></span><br><span class="line">        File[] files = src.listFiles();</span><br><span class="line">        <span class="keyword">for</span> (File file : files) &#123;</span><br><span class="line">            <span class="comment">//如果是文件直接复制</span></span><br><span class="line">            <span class="keyword">if</span> (file.isFile())&#123;</span><br><span class="line">                <span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(file);</span><br><span class="line">                <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="keyword">new</span> <span class="title class_">File</span>(dest,file.getName()));</span><br><span class="line">                <span class="type">byte</span>[] bytes = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                <span class="type">int</span> len;</span><br><span class="line">                <span class="keyword">while</span> ((len = fis.read(bytes)) != -<span class="number">1</span>)&#123;</span><br><span class="line">                    fos.write(bytes,<span class="number">0</span>,len);</span><br><span class="line">                &#125;</span><br><span class="line">                fos.close();</span><br><span class="line">                fis.close();</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//如果是文件夹递归调用copyfile方法</span></span><br><span class="line">                copyfile(file,<span class="keyword">new</span> <span class="title class_">File</span>(dest,file.getName()));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="🌵-练习二：加密图像（异或）">🌵  练习二：加密图像（异或）</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;D:\\1aaa\\bbb\\2.jpg&quot;</span>);</span><br><span class="line">    <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;D:\\1aaa\\bbb\\3.jpg&quot;</span>);</span><br><span class="line">    <span class="type">int</span> b;</span><br><span class="line">    <span class="keyword">while</span> ((b = fis.read()) != -<span class="number">1</span>)&#123;</span><br><span class="line">        fos.write(b^<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line">    fos.close();</span><br><span class="line">    fis.close();</span><br></pre></td></tr></table></figure><h4 id="🌵-缓冲流">🌵  缓冲流</h4><p>1️⃣  缓冲流有几种？</p><p>​字节缓冲输入流：BufferedInputStream</p><p>​字节缓冲输出流：BufferedOnputStream</p><p>​字符缓冲输入流：BufferedReader</p><p>​字符缓冲输出流：BufferedWriter</p><p>2️⃣ 缓冲流为什么能提高性能</p><p>​缓冲流自带长度为8192的缓冲区</p><p>​可以显著提高字节流的读写能力</p><p>​对于字符流提升不明想，但是有两个特有的方法</p><p>3️⃣ 字符缓冲流的两个特有方法是什么？</p><p>​字符缓冲输入流BufferedReader：readLine()</p><p>​字符缓冲输出流BufferedWriter：newLine()</p><p>**练习：**把以数字.开头的乱序句子重新按照数字排序：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1.读取数据</span></span><br><span class="line"><span class="type">BufferedReader</span> <span class="variable">br</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">FileReader</span>(<span class="string">&quot;D:\\1aaa\\bbb\\123.txt&quot;</span>));</span><br><span class="line">String line;</span><br><span class="line">ArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line"><span class="keyword">while</span> ((line = br.readLine()) != <span class="literal">null</span>) &#123;</span><br><span class="line">    list.add(line);</span><br><span class="line">&#125;</span><br><span class="line">br.close();</span><br><span class="line"><span class="comment">//2.排序</span></span><br><span class="line">Collections.sort(list, <span class="keyword">new</span> <span class="title class_">Comparator</span>&lt;String&gt;() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(String o1, String o2)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i1</span> <span class="operator">=</span> Integer.parseInt(o1.split(<span class="string">&quot;\\.&quot;</span>)[<span class="number">0</span>]);</span><br><span class="line">        <span class="type">int</span> <span class="variable">i2</span> <span class="operator">=</span> Integer.parseInt(o2.split(<span class="string">&quot;\\.&quot;</span>)[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">return</span> i1 - i2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//3.写出</span></span><br><span class="line"><span class="type">BufferedWriter</span> <span class="variable">bw</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedWriter</span>(<span class="keyword">new</span> <span class="title class_">FileWriter</span>(<span class="string">&quot;D:\\1aaa\\bbb\\123.txt&quot;</span>));</span><br><span class="line"><span class="keyword">for</span> (String str : list) &#123;</span><br><span class="line">    bw.write(str);</span><br><span class="line">    bw.newLine();</span><br><span class="line">&#125;</span><br><span class="line">bw.close();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>windows激活工具</title>
      <link href="/2024/05/22/windows%E6%BF%80%E6%B4%BB%E5%B7%A5%E5%85%B7/"/>
      <url>/2024/05/22/windows%E6%BF%80%E6%B4%BB%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<p>激活工具虽然不像其他常用软件，可能一年都用不了几次，但放一个在U盘以备不时之需还是很有必要的。这期阿闲就给大家准备了一款-HEU KMS Activator，绝对是良心中的战斗机~</p><p><strong>HEU KMS Activator（电脑）</strong></p><p>软件由大佬@知彼而知己开发，大小才4.5MB，**支持离线激活，**<strong>完全免费</strong>，无需安装，解压后双击运行exe文件即可启动。</p><table><thead><tr><th><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/Wt1ZHKUr5ADNesiaz2kK8R0kRlpncIqsHIpWqEXjqZSeRtHz5wMPmlHk03iczABmBHMlXUTuhY0DJBqp32LHq8XA/640?wx_fmt=png&from=appmsg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt="图片" style="zoom:80%;" /></th><th><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/Wt1ZHKUr5ADNesiaz2kK8R0kRlpncIqsHdA3grticbqmCbGattEknzdAhbZEqjKibqmbiaOSA6KGGERsEum0gZQibDw/640?wx_fmt=png&amp;from=appmsg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt=""></th></tr></thead></table><p>软件支持激活Windows和Office，提供智能激活、KMS激活和数字激活，<strong>如果看不懂，直接选择智能激活就行</strong>，点击开始即可。</p><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/Wt1ZHKUr5ADNesiaz2kK8R0kRlpncIqsHZhicHWMor2tUDbnoOj4aHATX73sia3ZfwngfjYd7bR1LAhtVRoW31rGg/640?wx_fmt=png&from=appmsg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt="图片" style="zoom: 50%;" /><p>软件支持查看Windows和Office的激活状态，以及重制重制授权状态，选择好后点击右侧的花瓣按钮。</p><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/Wt1ZHKUr5ADNesiaz2kK8R0kRlpncIqsHzUseP5o1icvF8Mn0Dkia6yq8KCicaAw9B2Ueic1gwAx9XEdcIqIAcQc5Ng/640?wx_fmt=png&from=appmsg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt="图片" style="zoom:50%;" /><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/Wt1ZHKUr5ADNesiaz2kK8R0kRlpncIqsHKFnkYupcdIJrujx4VtcRnkZ7yqYXiaKL9VqdR4rWPr9Ln5sDlwVIAtw/640?wx_fmt=png&from=appmsg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt="图片" style="zoom:50%;" /><p><strong>下载地址</strong></p><p><strong>github地址：</strong></p><p><a href="https://github.com/zbezj/HEU_KMS_Activator/releases">https://github.com/zbezj/HEU_KMS_Activator/releases</a></p><p><strong>直接下载:</strong></p><p><a href="https://wwp.lanzoul.com/b00talhphg">https://wwp.lanzoul.com/b00talhphg</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>强力下载器IDM</title>
      <link href="/2024/05/20/%E5%BC%BA%E5%8A%9B%E4%B8%8B%E8%BD%BD%E5%99%A8IDM/"/>
      <url>/2024/05/20/%E5%BC%BA%E5%8A%9B%E4%B8%8B%E8%BD%BD%E5%99%A8IDM/</url>
      
        <content type="html"><![CDATA[<p><strong>IDM简介</strong></p><p>Internet Download Manager (简称IDM) Windows 平台功能强大的多线程下载工具，国外非常受欢迎。</p><p>功能和特点：</p><p>支持断点续传，支持嗅探视频音频，接管所有浏览器，具有站点抓取、批量下载队列、计划任务下载，自动识别文件名、静默下载、网盘下载支持等功能。</p><p><strong>IDM测试截图</strong></p><img src="https://gitee.com/promisetua/typora-image/raw/master/image-20240520220902317.png" alt="image-20240520220902317" style="zoom: 50%;"/><p>IDM软件就在<a href="http://www.internetdownloadmanager.com">官网</a>直接下载就好</p><p><a href="https://www.aliyundrive.com/s/STN1sJ3wXpa">激活工具下载</a>好后解压，管理员权限打开下面这个程序</p><p><img src="https://gitee.com/promisetua/typora-image/raw/master/image-20240520223251991.png" alt="image-20240520223251991"></p><p>然后在这个界面里，如果你已经安装了软件，那么直接选择“1”进行鸡和，如果没下载软件，点“4”下载软件后，再点“1”进行激活。</p><img src="https://gitee.com/promisetua/typora-image/raw/master/640" alt="图片" style="zoom:50%;" /><p>然后过程填写一个ID作为激活账户然后等程序结束就好了。</p><p>这时候打开IDM已经成功激活。</p><p><img src="https://gitee.com/promisetua/typora-image/raw/master/image-20240520222608147.png" alt="image-20240520222608147"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>阅读app</title>
      <link href="/2024/05/20/%E9%98%85%E8%AF%BBapp/"/>
      <url>/2024/05/20/%E9%98%85%E8%AF%BBapp/</url>
      
        <content type="html"><![CDATA[<p><strong>第一款：阅读+书源</strong></p><p>​阅读这款APP虽然作者停更了，但是软件还是挺强大的，只要有人制作书源，那么软件有没有人维护现在都是非常优秀！</p><p>今天带来的书源有点多，大家文末自己去获取。我在这里给大家介绍导入的方法。我的方法是把书源发到VX的文件助手里，然后保存到本地。</p><table><thead><tr><th style="text-align:center"><img src="https://gitee.com/promisetua/typora-image/raw/master/640.webp" alt="640" style="zoom:33%;" /></th><th style="text-align:center"><img src="https://gitee.com/promisetua/typora-image/raw/master/640-1716189978471-1.webp" alt="640-1716189978471-1"  style="zoom:33%; " /></th></tr></thead></table><p>打开阅读的APP，找到“书源管理”，然后选择“本地导入”。</p><table><thead><tr><th style="text-align:center"><img src="https://gitee.com/promisetua/typora-image/raw/master/640-1716189978471-2.webp" alt="640-1716189978471-2" style="zoom:33%;" /></th><th style="text-align:center"><img src="https://gitee.com/promisetua/typora-image/raw/master/640-1716189978471-3.webp" alt="640-1716189978471-3" style="zoom:33%;" /></th></tr></thead></table><p>然后选择“自带文件选择器”，找到“Download—WeiXin”，选择刚刚保存的书源进行导入即可。</p><img src="https://gitee.com/promisetua/typora-image/raw/master/640-1716191241800-25.webp" alt="640-1716191241800-25" style="zoom:33%;" /><p>如果有网络资源，也可以通过网络的导入方式。</p><img src="https://gitee.com/promisetua/typora-image/raw/master/640-1716191241800-27.webp" alt="640-1716191241800-27" style="zoom:50%;" /><p>网络的源我找了几个，但测试后发现跟本地的源差不多，在这里我就不给大家提供了！<br><a href="https://pan.baidu.com/s/1vmXpOjxSZso_m3FTPZde-w?pwd=8888">百度</a>、<a href="https://pan.quark.cn/s/a4f0882ba0a5">夸克</a>和<a href="https://www.alipan.com/s/V2HAPacpZ8o">阿里</a>下载。</p><p><strong>第二款：番茄小说</strong></p><p>​番茄小说大家都不陌生，也是出了起点之外的最热门的小说阅读App，而是是全免费书籍，但是我们应用商店下载的版本，广告很多，非常影响阅读体验，今天推荐一个基本没广告番茄小说的版本，记得不要更新！</p><p>下载地址：<a href="https://pan.baidu.com/s/1v32Rh1USVnScxh-RErYNyg?pwd=rc36">百度网盘</a></p><img src="/image/e8828775872ac4852eff00b1c993f70.jpg" alt="" style="zoom:33%;" /><p><strong>彩蛋</strong>：AI网站推荐一个，非常好用,<a href="https://chat18.aichatos8.com">点击</a>跳转。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>EV录屏</title>
      <link href="/2024/05/20/EV%E5%BD%95%E5%B1%8F/"/>
      <url>/2024/05/20/EV%E5%BD%95%E5%B1%8F/</url>
      
        <content type="html"><![CDATA[<h3 id="EV录屏（PC端）">EV录屏（PC端）</h3><p>下载链接：<a href="https://pan.baidu.com/s/1CMYzvCs9lJL_YQf9QPCetQ?pwd=8888">百度</a>，<a href="https://pan.quark.cn/s/96b7b847d739">夸克</a>，<a href="https://www.alipan.com/s/DkLfSS4iWMA">阿里</a></p><p>现在的EV录屏是会员制度，但是其会员是针对一些高级功能，对于普通的录屏功能，它完全免费。</p><p>今天介绍的这个版本是2016版，其原是绿色版本，被千千制作成了单文件版，这个版本是完全免费，无时长录制限制，无水印。</p><p><img src="../image/640.png" alt="图片"></p><p>EV录屏可以“本地录制”，也可以“在线直播”，录制方式分为【视频录制】和【音频录制】两种。</p><p>**视频录制：**视频录制可以全屏录制、选区录制、摄像头录制和不录制视频这几项。</p><p><img src="../image/640-1716188613355-1.png" alt="图片"></p><p>**音频录制：**音频录制可以单独录制麦克风声音、系统声音，也可以麦和系统声音一起录制，当然也可以选择不录音频。</p><p><img src="../image/640-1716188613355-2.webp" alt="图片"></p><p>**辅助工具：**除了视频和音频录制，软件还有辅助工具，有图片水印、文字水印，还可以嵌入摄像头和本地直播。</p><p><img src="../image/640-1716188613355-3.webp" alt="图片"></p><p>**保存：**录制后好的视频在【列表】里有显示，需要更改存储路径可以点“更改目录”。</p><p><img src="../image/640-1716188613355-4.webp" alt="图片"></p><p>此外，在**【设置】**中有基本设置、光标设置、定时设置、本地存盘、网络直播和快捷方式这几项。</p><p><img src="../image/640-1716188613356-5.webp" alt="图片"></p><p>特别这里的**“快捷键**”，可以自己设置喜欢的热键，方便大家录制时快速使用！</p><p><img src="../image/640-1716188613356-6.webp" alt="图片"></p><p>其他的大家自己去体验，软件就介绍到这里啦！</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
